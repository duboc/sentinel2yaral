rule SharePointFileOperation_via_devices_with_previously_unseen_user_agents {

    meta:
        author = "Gemini"
        event_name = "SharePoint File Operation via Devices with Previously Unseen User Agents"
        description = "Identifies anomalies if the number of documents uploaded or downloaded from device(s) associated with a previously unseen user agent exceeds a threshold (default is 5) and deviation (default is 25)."
        severity = "Medium"
        mitre_attack_tactic = "TA0010"
        mitre_attack_technique = "T1030"
        rule_id = "5dd76a87-9f87-4576-bab3-268b0e2b338b" //Preserving original rule ID for reference

    events:
        // Map OfficeActivity to RESOURCE_ACCESS
        $event.metadata.log_type = "RESOURCE_ACCESS"

        // Filter for SharePoint file operations (FileDownloaded, FileUploaded)
        $event.resource.name = "SharePoint" // Assuming resource.name identifies SharePoint
        (
            $event.resource.operation = "FileDownloaded"
            or $event.resource.operation = "FileUploaded"
        )

        // Check for UserAgent
        $event.http.user_agent != null

        // Define variables for UserId, ClientIP, Site_Url
        $user_id = $event.principal.user.userid
        $client_ip = $event.principal.ip[0] // Assuming principal.ip is an array
        $site_url = $event.resource.url

        // Subrule to identify frequent user agents over a historical period (14 days)
        $frequent_ua.metadata.log_type = "RESOURCE_ACCESS"
        $frequent_ua.resource.name = "SharePoint"
        (
            $frequent_ua.resource.operation = "FileDownloaded"
            or $frequent_ua.resource.operation = "FileUploaded"
        )
        $frequent_ua.http.user_agent != null
        $frequent_ua.http.user_agent = $event.http.user_agent //Match user agent
        $frequent_ua.principal.user.userid = $user_id //Match user ID
        $frequent_ua.resource.url = $site_url //Match site URL
        $frequent_ua.metadata.event_timestamp.seconds > (timestamp() - duration("14d")).seconds //Historical period
        $frequent_ua.metadata.event_timestamp.seconds < (timestamp() - duration("1d")).seconds //Historical period

        //Subrule to calculate user baseline
        $user_baseline.metadata.log_type = "RESOURCE_ACCESS"
        $user_baseline.resource.name = "SharePoint"
        (
            $user_baseline.resource.operation = "FileDownloaded"
            or $user_baseline.resource.operation = "FileUploaded"
        )
        $user_baseline.principal.user.userid = $user_id //Match user ID
        $user_baseline.resource.url = $site_url //Match site URL
        $user_baseline.metadata.event_timestamp.seconds > (timestamp() - duration("14d")).seconds //Historical period
        $user_baseline.metadata.event_timestamp.seconds < (timestamp() - duration("1d")).seconds //Historical period

    match:
        // Match events within the last day
        $event over 1d

        //Ensure the user agent is frequent
        count($frequent_ua) > 5

        //Calculate deviation from baseline
        count($user_baseline) > 0

    outcome:
        // Placeholder for risk scoring and output variables.  Requires more context
        // on how Chronicle handles aggregations and deviations.
        $deviation = (count($event) - count($user_baseline)) / count($user_baseline);
        $risk_score = if ($deviation > 0.25, "High", "Medium"); //Simplified deviation check

    condition:
        $event and $deviation > 0.25
}